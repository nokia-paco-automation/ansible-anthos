---
    # - name: Update all packages on ubuntu
    #   apt:
    #     upgrade: dist
    
    # - name: install packages
    #   apt:
    #     name: "{{ item.pkgname }}"
    #     state: present
    #   with_items:
    #     - { pkgname: "apt-transport-https" }
    #     - { pkgname: "curl" }
    
    # - name: Add an apt signing key for Kubernetes
    #   apt_key:
    #     url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    #     state: present
    
    # - name: Adding apt repository for Kubernetes
    #   apt_repository:
    #     repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    #     state: present
    #     filename: kubernetes.list
    
    # - name: Remove useless packages from the cache
    #   apt:
    #     autoclean: yes
    
    # - name: Remove dependencies that are no longer required
    #   apt:
    #     autoremove: yes
    
    # - name: install kubernetes packages
    #   apt: 
    #     name: "{{ item.pkgname }}"
    #     state: "present"
    #     update_cache: yes
    #     dpkg_options: force-downgrade
    #     force: yes
    #   with_items:
    #     - { pkgname: "kubelet={{kube_ubuntu_version}}" }
    #     - { pkgname: "kubeadm={{kube_ubuntu_version}}" }
    #     - { pkgname: "kubectl={{kube_ubuntu_version}}" }
    
    # - name: Hold kubelet, kubeadm and kubectl versions
    #   become: true
    #   shell: apt-mark hold kubelet kubeadm kubectl
    #   register: apt
      
    # - name: debug output
    #   debug: 
    #     msg: "{{ apt }}"
    
    # - name: Get the cgroup-driver value from docker
    #   become: true
    #   shell: docker info | grep -i cgroup
    #   register: cgroup
    
    # - name: debug output
    #   debug:
    #     msg: "{{ cgroup }}"
    
    # - name: Show /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    #   become: true
    #   shell: cat /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    #   register: response
    
    # - name: debug output
    #   debug: 
    #     msg: "{{ response }}"
    
    # - name: Update /etc/systemd/system/kubelet.service.d/10-kubeadm.conf node-ip
    #   become: true
    #   shell: grep -q 'Environment="KUBELET_EXTRA_ARGS=--eviction-hard=memory.available<100Mi,nodefs.available<1Gi,nodefs.inodesFree<5%,imagefs.available<1Gi --eviction-minimum-reclaim=memory.available=0Mi,nodefs.available=500Mi,imagefs.available=500Mi --node-ip={{ hostvars[inventory_hostname]["kubernetes_node_ip"] }}"' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf && echo exists || echo 'Environment="KUBELET_EXTRA_ARGS=--eviction-hard=memory.available<100Mi,nodefs.available<1Gi,nodefs.inodesFree<5%,imagefs.available<1Gi --eviction-minimum-reclaim=memory.available=0Mi,nodefs.available=500Mi,imagefs.available=500Mi --node-ip={{ hostvars[inventory_hostname]["kubernetes_node_ip"] }}"' >> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    #   register: result
    #   changed_when: result.stdout.find('exists') == -1
    
    - name: Update /etc/systemd/system/kubelet.service.d/10-kubeadm.conf cpu-manager-policy
      become: true
      lineinfile:
        path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
        state: present
        insertbefore: "^ExecStart="
        backup: yes
        line: Environment="KUBELET_CPUMANAGER=--image-gc-high-threshold=80 --image-gc-low-threshold=75 --cpu-manager-policy=static --kube-reserved=cpu=200m,memory=512Mi"
    
    - name: Add KUBELET_CPUMANAGER to ExecStart
      become: true
      lineinfile:
        path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
        state: present
        backrefs: yes
        regexp: '(^ExecStart=/usr/bin/kubelet.+)$'
        line: '\1 $KUBELET_CPUMANAGER'
    
    - name: Replace duplicate KUBELET_CPUMANAGER
      become: true
      replace:
        path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
        regexp: '\$KUBELET_CPUMANAGER\s+\$KUBELET_CPUMANAGER'
        replace: $KUBELET_CPUMANAGER
    
    - name: Show /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      become: true
      shell: cat /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      register: response
    
    - name: debug output
      debug: 
        msg: "{{ response }}"